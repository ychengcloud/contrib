@@- $g := .Generator -@@
<template>
    <div>
        <el-card class="!border-none mb-4" shadow="never">
            <el-form
                class="mb-[-16px]"
                :model="queryParams"
                inline
            >

                @@ $g.Template "view/search.tmpl" . @@

                <el-form-item>
                    <el-button type="primary" @click="resetPage">查询</el-button>
                    <el-button @click="resetParams">重置</el-button>
                </el-form-item>
            </el-form>
        </el-card>
        <el-card class="!border-none" v-loading="pager.loading" shadow="never">
            <el-button v-perms="['@@ .Name @@:create']" type="primary" @click="handleAdd">
                <template #icon>
                    <icon name="el-icon-Plus" />
                </template>
                新增
            </el-button>
            <el-button
                v-perms="['@@ .Name @@:delete']"
                :disabled="!selectData.length"
                @click="handleDelete(selectData)"
            >
                删除
            </el-button>
            <div class="mt-4">
                <el-table :data="pager.lists" @selection-change="handleSelectionChange">
                    <el-table-column type="selection" width="55" />

                    @@ $g.Template "view/list.tmpl" . @@

                    <el-table-column label="操作" width="150" fixed="right">
                        <template #default="{ row }">
                            <el-button
                                v-perms="['@@ .Name @@:detail']"
                                type="primary"
                                link
                                @click="handleDetail(row)"
                            >
                                查看
                            </el-button>
                             <el-button
                                v-perms="['@@ .Name @@:edit']"
                                type="primary"
                                link
                                @click="handleEdit(row)"
                            >
                                编辑
                            </el-button>
                            <el-button
                                v-perms="['@@ .Name @@:delete']"
                                type="danger"
                                link
                                @click="handleDelete(row.@@ .ID.Name @@)"
                            >
                                删除
                            </el-button>
                        </template>
                    </el-table-column>
                </el-table>
            </div>
            <div class="flex mt-4 justify-end">
                <pagination v-model="pager" @change="getLists" />
            </div>
        </el-card>
        <edit-popup v-if="showEdit" ref="editRef" :dict-data="dictData" @success="getLists" @close="showEdit = false" />
        <detail-popup v-if="showDetail" ref="detailRef" :dict-data="dictData" @success="getLists" @close="showDetail = false" />
    </div>
</template>

<script lang="ts" setup name="@@ .Name @@Lists">
import { usePaging } from '@/hooks/usePaging'
import { useDictData } from '@/hooks/useDictOptions'
import { @@ .Name | camel @@Lists, @@ .Name | camel @@Delete } from '@/api/@@ .Name @@'

@@- $g.Template "relation_item/import.tmpl" . @@

import { timeFormat } from '@/utils/util'
import feedback from '@/utils/feedback'
import EditPopup from './edit.vue'
import DetailPopup from './detail.vue'

const editRef = shallowRef<InstanceType<typeof EditPopup>>()
const detailRef = shallowRef<InstanceType<typeof DetailPopup>>()
// 是否显示编辑框
const showEdit = ref(false)
// 是否显示详情框
const showDetail = ref(false)

// 查询条件
const queryParams = reactive({
@@ $g.Template "view/queryParams.tmpl" . @@
})

// 选中数据
const selectData = ref<any[]>([])

@@ $g.Template "other_item/dictData.tmpl" . @@

// 表格选择后回调事件
const handleSelectionChange = (val: any[]) => {
    selectData.value = val.map(({ 
        @@ .ID.Name @@
}) =>   @@ .ID.Name @@ )}

// 分页相关
const { pager, getLists, resetParams, resetPage } = usePaging({
    fetchFun: @@ .Name | camel @@Lists,
    params: queryParams
})

@@ $g.Template "other_item/optionsData.tmpl" . @@

// 添加
const handleAdd = async () => {
    showEdit.value = true
    await nextTick()
    editRef.value?.open('add')
}

// 查看
const handleDetail = async (data: any) => {
    showDetail.value = true
    await nextTick()
    detailRef.value?.open()
    detailRef.value?.setFormData(data)
}

// 编辑
const handleEdit = async (data: any) => {
    showEdit.value = true
    await nextTick()
    editRef.value?.open('edit')
    editRef.value?.setFormData(data)
}

// 删除
const handleDelete = async (@@ .ID.Name @@: number | any[]) => {
    await feedback.confirm('确定要删除？')
    await @@ .Name | camel @@Delete({ @@ .ID.Name @@ })
    getLists()
}

onActivated(() => {
    getLists()
})

getLists()
</script>

