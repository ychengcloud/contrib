{{ $g := .Generator }}
package service

import (
	"github.com/iancoleman/strcase"
	"google.golang.org/protobuf/types/known/fieldmaskpb"

	"{{ .Package }}/domain"
	pb "{{ $g.Cfg.Attrs.protoPkg }}/gen/go/{{ .Project }}/v1"
)

type Service struct {
	pb.{{ .Project | title }}ServiceServer
	us domain.Usecase
}

func NewService(us domain.Usecase) *Service {
	return &Service{
		us: us,
	}
}

func CamelCaseFieldMask(mask *fieldmaskpb.FieldMask) {
	if mask == nil || mask.Paths == nil {
		return
	}

	var newPaths []string
	for _, path := range mask.Paths {
		lowerCasedParts := strings.Split(path, ".")
		var camelCasedParts []string
		for _, part := range lowerCasedParts {
			camelCasedParts = append(camelCasedParts, strcase.ToCamel(part))
		}
		newPaths = append(newPaths, strings.Join(camelCasedParts, "."))
	}

	mask.Paths = newPaths
}