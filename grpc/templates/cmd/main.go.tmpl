package main

import (
	"context"
	"flag"
	"log"
	"strings"

	"{{ .Package }}/config"
	repogorm "{{ .Package }}/repositories/gorm"
	"{{ .Package }}/server"
	"{{ .Package }}/services"

)

var configFile = flag.String("c", "config", "set config file")

func main() {
	flag.Parse()

	cfg, err := config.New(*configFile, strings.ToUpper("{{ .Project | singular }}_"))
	if err != nil {
		log.Fatalln("Failed to listen:", err)

	}

	logger, err := NewLogger(&cfg.LoggerConfig)
	if err != nil {
		log.Fatalln("Failed to listen:", err)

	}

	repo, err := repogorm.New{{ .Project | pascal }}Repository(context.Background(),
		repogorm.WithDSN(cfg.DatabaseConfig.DSN),
	)
	if err != nil {
		log.Fatalln("Failed to create repository:", err)
	}

	{{ .Project | camel }}Service := services.New{{ .Project | pascal }}Service(repo)

	s := server.NewServer(logger, cfg, {{ .Project | camel }}Service)

	logger.Sugar().Fatal(s.Run())
}
